apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //ARouter添加的
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //Lint 会检查项目中的语法错误
    lintOptions {
        abortOnError false
    }

}

buildscript {
    repositories {
        mavenCentral()
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //support
    api rootProject.ext.dependencies["support-v4"]
    api rootProject.ext.dependencies["appcompat-v7"]
    api rootProject.ext.dependencies["design"]
    api rootProject.ext.dependencies["recyclerview-v7"]
    api rootProject.ext.dependencies["annotations"]
    //rx
    api rootProject.ext.dependencies["rxjava2"]
    api rootProject.ext.dependencies["rxandroid2"]
    api rootProject.ext.dependencies["rxlifecycle2"]
    api rootProject.ext.dependencies["rxlifecycle2-android"]
    api rootProject.ext.dependencies["rxlifecycle2-components"]
    api rootProject.ext.dependencies["rxpermissions2"]
    //network
    api rootProject.ext.dependencies["okhttp3"]
    api rootProject.ext.dependencies["okhttp3-log"]
    api rootProject.ext.dependencies["retrofit"]
    implementation rootProject.ext.dependencies["retrofit-converter-gson"]
    implementation rootProject.ext.dependencies["retrofit-adapter-rxjava2"]
    //glide
    api rootProject.ext.dependencies["glide"]
    annotationProcessor rootProject.ext.dependencies["glide-compiler"]
    api rootProject.ext.dependencies["glide-loader-okhttp3"]
    api rootProject.ext.dependencies["glide-annotations"]
    //gson
    api rootProject.ext.dependencies["gson"]
    //dagger2
    api rootProject.ext.dependencies["dagger2"]
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]
    api rootProject.ext.dependencies["dagger2-android"]
    api rootProject.ext.dependencies["dagger2-android-support"]
    annotationProcessor rootProject.ext.dependencies["dagger2-android-processor"]
    //Dagger2 javax.annotation不存在   添加缺失的部分javax注解
    api rootProject.ext.dependencies["javax.annotation"]
    //butterknife
    api rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    //eventbus
    api rootProject.ext.dependencies["eventbus"]
    //arouter
    api rootProject.ext.dependencies["arouter"]
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]
    //BaseRecyclerViewAdapterHelper
    api rootProject.ext.dependencies["brvah"]
    //SmartRefreshLayout
    api rootProject.ext.dependencies["SmartRefreshLayout"]
    //topsnackbar
    api rootProject.ext.dependencies["topsnackbar"]
}

/** 以下开始是将Android Library上传到jcenter的相关配置**/

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

//项目主页
def siteUrl = 'https://github.com/madreain/MVPHulk'    // project homepage
//项目的版本控制地址
def gitUrl = 'https://github.com/madreain/MVPHulk.git' // project git

//发布到组织名称名字，必须填写
group = "com.madreain"
//发布到JCenter上的项目名字，必须填写
def libName = "MVPHulk"
// 版本号，下次更新是只需要更改版本号即可
version = "1.0.0"//support版本支持
/**  上面配置后上传至jcenter后的编译路径是这样的： compile 'cn.bluemobi.dylan:sqlitelibrary:1.0'  **/

//生成源文件
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
//生成文档
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    options.encoding "UTF-8"
    options.charSet 'UTF-8'
    options.author true
    options.version true
    options.links "https://github.com/madreain"
    failOnError false
}

//文档打包成jar
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
//拷贝javadoc文件
task copyDoc(type: Copy) {
    from "${buildDir}/docs/"
    into "docs"
}

//上传到jcenter所需要的源码文件
artifacts {
    archives javadocJar
    archives sourcesJar
}

// 配置maven库，生成POM.xml文件
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                name 'madreain'
                url siteUrl
                licenses {
                    license {
                        name 'madreain'
                        url 'https://github.com/madreain'
                    }
                }
                developers {
                    developer {
                        id 'madreain'
                        name 'madreain'
                        email 'madreain6@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

//上传到jcenter
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")    //读取 local.properties 文件里面的 bintray.user
    key = properties.getProperty("bintray.apikey")   //读取 local.properties 文件里面的 bintray.apikey
    configurations = ['archives']
    pkg {
        repo = "Madreain"
        name = "MVPHulk"    //发布到JCenter上的项目名字，必须填写
        desc = 'MVPHulk'    //项目描述
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}